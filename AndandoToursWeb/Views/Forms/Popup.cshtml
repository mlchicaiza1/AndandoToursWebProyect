
@{
    ViewData["Title"] = "form_taylorMade";
    Layout = null;
}
<script type="text/javascript">
    function reloadScripts(toRefreshList/* list of js to be refresh */, key /* change this key every time you want force a refresh */) {
        var scripts = document.getElementsByTagName('script');
        for (var i = 0; i < scripts.length; i++) {
            var aScript = scripts[i];
            for (var j = 0; j < toRefreshList.length; j++) {
                var toRefresh = toRefreshList[j];
                if (aScript.src && (aScript.src.indexOf(toRefresh) > -1)) {
                    new_src = aScript.src.replace(toRefresh, toRefresh + '?k=' + key);
                    // console.log('Force refresh on cached script files. From: ' + aScript.src + ' to ' + new_src)
                    aScript.src = new_src;
                }
            }
        }
    }
</script>

<script type="text/javascript">
    var ifr = document.getElementById("lf-iframe-embed-code-73845");
    if (window.location.href && window.location.href.indexOf('?') > -1) {
        var get = window.location.href.substr(window.location.href.indexOf('?') + 1);
        if (ifr && get.length > 0) {
            var src = ifr.src; src = src.indexOf('?') > -1 ? src + '&' + get : src + '?' + get; ifr.src = src;
        }
    }
    var iframePosition = function (e) {
        var n = ifr.getBoundingClientRect().top + pageYOffset; ifr.contentWindow.postMessage(JSON.stringify({ type: 'iframeTop', value1: n }), '*');
    }, onTestScroll = function (e) {
        window.pageYOffset || document.documentElement.scrollTop; var n = ifr.getBoundingClientRect(); ifr.contentWindow.postMessage(JSON.stringify({ type: 'windowTop', value2: n.y || n.top, value3: window.innerHeight }), '*');
    };
    window.addEventListener ? (window.addEventListener('scroll', onTestScroll, !1), window.addEventListener('load', onTestScroll, !1), window.addEventListener('scroll', iframePosition, !1), window.addEventListener('load', iframePosition, !1), window.addEventListener('DOMContentLoaded', iframePosition, !1)) : window.attachEvent && (window.addEventListener('DOMContentLoaded', iframePosition), window.attachEvent('scroll', onTestScroll), window.addEventListener('load', onTestScroll));
    window.handleIFrameMessage = function (e) {
        if (e.data.length > 0) {
            try {
                var args = JSON.parse(e.data); var iframe = document.getElementById("lf-iframe-embed-code-73845"); var formIds = ["73845"]; if (formIds.indexOf(args.formID) !== -1) {
                    switch (args.case) {
                        case 'redirectTo': window.open(decodeURI(args.redirectToURL), '_self'); ifr.src = ifr.src; break; case 'resizeIframe': iframe.width = args.scrollWidth + 'px', iframe.height = args.scrollHeight + 'px'; break; case 'stepChanged': var elCoords = getCoords(ifr), isFormOnScreen = isOnScreen(ifr, false);
                            if (!isFormOnScreen) { window.scrollTo(0, elCoords.top); } break; case 'scrollTo': window.scrollTo({ top: args.scrollToPosition }); break;
                    }
                } if ('contentWindow' in iframe && 'postMessage' in iframe.contentWindow) { var urls = { 'docurl': encodeURIComponent(document.URL), 'referrer': encodeURIComponent(document.referrer), }; iframe.contentWindow.postMessage(JSON.stringify({ 'type': 'urls', 'value': urls }), '*'); }
            } catch (e) { }
        }
    }; if (window.addEventListener) {
        window.addEventListener('message', handleIFrameMessage, false);
    } else if (window.attachEvent) {
        window.attachEvent('onmessage', handleIFrameMessage);
    }
    var getCoords = function (elem) {
        var box = elem.getBoundingClientRect();
        var body = document.body;
        var docEl = document.documentElement;
        var scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;
        var scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;
        var clientTop = docEl.clientTop || body.clientTop || 0;
        var clientLeft = docEl.clientLeft || body.clientLeft || 0;
        var top = box.top + scrollTop - clientTop;
        var left = box.left + scrollLeft - clientLeft;
        return { top: Math.round(top), left: Math.round(left) };
    };
    var isOnScreen = function (_this, partial) {
        var t = _this;
        var box = t.getBoundingClientRect();
        var win = { h: window.innerHeight, w: window.innerWidth };
        var topEdgeInRange = box.top >= 0 && box.top <= win.h;
        var bottomEdgeInRange = box.bottom >= 0 && box.bottom <= win.h;
        var leftEdgeInRange = box.left >= 0 && box.left <= win.w;
        var rightEdgeInRange = box.right >= 0 && box.right <= win.w;
        var coverScreenHorizontally = (box.left <= 0 ^ box.right >= win.w);
        var coverScreenVertically = (box.top <= 0 ^ box.bottom >= win.h);
        var topEdgeInScreen = topEdgeInRange && (leftEdgeInRange || rightEdgeInRange || coverScreenHorizontally);
        var bottomEdgeInScreen = bottomEdgeInRange && (leftEdgeInRange || rightEdgeInRange || coverScreenHorizontally);
        var leftEdgeInScreen = leftEdgeInRange && (topEdgeInRange || bottomEdgeInRange || coverScreenVertically);
        var rightEdgeInScreen = rightEdgeInRange && (topEdgeInRange || bottomEdgeInRange || coverScreenVertically);
        var isPartiallyOnScreen = topEdgeInScreen || bottomEdgeInScreen || leftEdgeInScreen || rightEdgeInScreen;
        var isEntirelyOnScreen = topEdgeInScreen && bottomEdgeInScreen && leftEdgeInScreen && rightEdgeInScreen;
        return partial ? isPartiallyOnScreen : isEntirelyOnScreen;
    };
</script>




<div class="container">
   <div class="row">
       <button id="btnClick" type="button">
           click for login 
       </button>
   </div>
    <div class="overlay" tabindex="-1" id="loginModal"
         data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">
                        ×
                    </button>
                    <h4 class="modal-title">Star planing  your trip</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <input class="form-control" type="text"
                                   placeholder="Login Username" id="inputUserName" />
                        </div>
                        <div class="form-group">
                            <input class="form-control" placeholder="Login Password"
                                   type="password" id="inputPassword" />
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary button button4">Sign</button>
                    <button type="button" id="btnHideModal" class="btn btn-primary button button4">
                        Hide
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">

</script>
<script src="bootstrap/js/bootstrap.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#btnClick").click(function() {
            $("#loginModal").modal('show');
        });

        $("#btnHideModal").click(function () {
            $("#loginModal").modal('hide');
        });
    });
</script>